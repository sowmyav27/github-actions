name: Notify on Failure

on:
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false  # Ensures all tests run, even if one fails
      matrix:
        test-suite: [Test1, Test2, Test3, Test4]

    steps:
      - name: Checkout the repository
        uses: actions/checkout@v2

      - name: Run test - ${{ matrix.test-suite }}
        id: run-test
        run: |
          echo "Running ${{ matrix.test-suite }}..."
          exit 1  # Simulating a failure

      - name: Set Failure Variable
        if: failure()
        run: echo "FAILED_TEST=${{ matrix.test-suite }} -- failure" >> $GITHUB_ENV

  report-failures:
    needs: test
    runs-on: ubuntu-latest
    if: always()  # Run even if previous jobs fail

    steps:
      - name: Aggregate Failures
        run: |
          FAILED_TESTS=""
          for job in test1 test2 test3 test4; do  # Replace with your actual matrix job names
            RESULT=$(jq -r ".${job}.result" <<< '${{ toJson(needs) }}')
            if [[ "$RESULT" == "failure" ]]; then
              FAILED_TESTS+="${job} -- failure\n"
            fi
          done
          echo -e "FAILED_TESTS<<EOF\n$FAILED_TESTS\nEOF" >> $GITHUB_ENV

      - name: Report Failures to Slack
        if: ${{ env.FAILED_TESTS != '' }}
        uses: sowmyav27/github-actions/.github/actions/my-action@main
        with:
          test_results: "${{ env.FAILED_TESTS }}"
          run_id: ${{ github.run_id }}
          run_number: ${{ github.run_number }}
          status: failure
          source_repo: ${{ github.repository }}
          webhook_url: ${{ secrets.SLACK_WEBHOOK_URL_CI_TESTS_ALERTS }}
