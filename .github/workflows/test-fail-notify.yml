name: Notify on Failure

on:
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false  # Ensures all tests run, even if one fails
      matrix:
        test-suite: [Test1, Test2, Test3, Test4]

    steps:
      - name: Checkout the repository
        uses: actions/checkout@v2

      - name: Run test - ${{ matrix.test-suite }}
        id: run-test
        run: |
          echo "Running ${{ matrix.test-suite }}..."
          exit 1  # Simulating a failure

      - name: Set failure output
        id: failure-output
        if: failure()  # Only set output if test fails
        run: |
          echo "::set-output name=failure::${{ matrix.test-suite }} -- failure"
    outputs:
      failed_tests: ${{ steps.failure-output.outputs.failure }}  # Output the failed test(s)

  report-failures:
    needs: test
    runs-on: ubuntu-latest
    if: always()  # Run even if previous jobs fail

    steps:
      - name: Collect and aggregate failures
        run: |
          FAILED_TESTS=""
          for test in ${{ fromJson(needs.test.outputs.failed_tests) }}; do
            if [[ -n "$test" ]]; then
              FAILED_TESTS+="$test\n"
            fi
          done
          echo "FAILED_TESTS=$FAILED_TESTS" >> $GITHUB_ENV  # Use GITHUB_ENV for subsequent steps

      - name: Debug Failure Collection
        run: echo "Collected Failures Sowmya ${{ env.FAILED_TESTS }}"  # Print out the collected failures
 
      - name: Report Failures to Slack
        if: always()
        uses: sowmyav27/github-actions/.github/actions/my-action@main
        with:
          test_results: "${{ env.FAILED_TESTS }}"
          run_id: ${{ github.run_id }}
          run_number: ${{ github.run_number }}
          status: failure
          source_repo: ${{ github.repository }}
          webhook_url: ${{ secrets.SLACK_WEBHOOK_URL_CI_TESTS_ALERTS }}
