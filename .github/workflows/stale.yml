# This workflow warns and then closes issues and PRs that have had no activity for a specified amount of time.
#
# You can adjust the behavior by modifying this file.
# For more information, see:
# https://github.com/actions/stale
name: Mark stale pull requests

on:
  schedule:
  - cron: '*/1 * * * *'

jobs:
  stale:

    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      
      - name: Check PRs and compile report
        id: compile_report
        uses: actions/github-script@v5
        with:
          script: |
            const fiveDaysAgo = new Date(new Date().setDate(new Date().getDate() - 5)); 
            const threeDaysAgo = new Date(new Date().setDate(new Date().getDate() - 3));
            const automationLabels = ['automation-test', 'automation-framework'];
            let report = '';

            // Fetch open PRs
            const prs = await github.paginate(github.rest.pulls.list, {
              owner: 'rancher',
              repo: 'rancher',
              state: 'open',
              per_page: 100,
            });

            for (const pr of prs) {
              
              const createdDate = new Date(pr.created_at); 
              const updatedDate = new Date(pr.updated_at); 
              const labels = pr.labels.map(label => label.name);

              // Check if PR has specific labels
              const hasAutomationLabel = labels.some(label => automationLabels.includes(label));

              if (!hasAutomationLabel) continue;

              // Fetch PR reviews
              const reviews = await github.rest.pulls.listReviews({
                owner: 'rancher',
                repo: 'rancher',
                pull_number: pr.number,
                per_page: 100,
              });
              let lastReviewDate = null
              let changesRequested = ""
              
              // No reviews on the PR for > 5 days
              if (reviews.length == 0 && createdDate < fiveDaysAgo) {
                report += `Stale PR (more than 5 days): #${pr.number} ${pr.html_url}\n`;
              } 
              else {
                  for (const review of reviews.data) {
                    const reviewDate = newDate(review.submitted_at);
                    if(!lastReviewDate || reviewDate > lastReviewDate) {
                      lastReviewDate = reviewDate
                      changesRequested = review.state
                  }
                }
              }

              if (lastReviewDate && changesRequested === "CHANGES_REQUESTED" && (lastReviewDate < threeDaysAgo && updatedDate > lastReviewDate))) {
                report += `Changes made but awaiting review (more than 3 days since last update): #${pr.number} ${pr.html_url}\n`;
              }

              if (lastReviewDate && changesRequested === "CHANGES_REQUESTED" && (lastReviewDate < threeDaysAgo && updatedDate <= lastReviewDate)) {
                report += `PR with requested changes and no updates (more than 3 days): #${pr.number} ${pr.html_url}\n`;
              }
              if (lastReviewDate && changesRequested === "APPROVED" && (lastReviewDate < threeDaysAgo)) {
                report += `Reviewed but not merged (more than 3 days since review): #${pr.number} ${pr.html_url}\n`;
              }
            }
            return report;
           
          result-encoding: string

      - name: Notify on Slack 
        if: steps.compile_report.outputs.result
        run: |
          curl -X POST -H 'Content-type: application/json' --data '{"text":"PR Report:\n${{ steps.compile_report.outputs.result }}"}' ${{ secrets.SLACK_WEBHOOK_URL }}
